
name: Backend CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'Backend/**'
      - '.github/workflows/backend-ci-cd.yml'

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE_FULL }}
  KUBERNETES_NAMESPACE: default

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: Backend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./Backend
        run: npm ci
      
      - name: Run linter
        working-directory: ./Backend
        run: npm run lint || echo "No lint script"
      
      - name: Run tests
        working-directory: ./Backend
        run: npm test || echo "No tests yet"
  build-and-push:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      image-tag: ${{ steps.meta.outputs.version }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            v${{ github.run_number }}   # Tag unique incr√©mental
          
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./Backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
